project_name: "sttr"
version: 2
# before are hooks that will be run before any builds are done, so good to put install scripts and stuff that your builds need here
before:
  hooks:
    # Remove unused packaged from the build process
    - go mod tidy
    - go generate

builds:
  - main: ./main.go
    binary: sttr
    goos: ["linux", "darwin", "windows"]
    goarch: ["386", "amd64", "arm64"]
    ldflags:
      - -s -w -X "main.version={{.Version}}"
    env:
      - CGO_ENABLED=0

universal_binaries:
  - replace: true

changelog:
  sort: "asc"
  filters:
    exclude: ["^docs:", "demo", "^hugo:", "Merge pull request", "Merge branch"]

sboms:
  - artifacts: archive

dockers:
  - skip_push: false
    use: buildx
    dockerfile: .goreleaser.Dockerfile
    image_templates:
      - ghcr.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-amd64
      - docker.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-amd64
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.version={{ .Version }}
      - --label=org.opencontainers.image.revision={{ .Commit }}
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.created={{ .Date }}
      - --label=org.opencontainers.image.description=a cross-platform, cli app to perform various operations on string
      - --label=org.opencontainers.image.vendor=abhimanyu003
      - --label=org.opencontainers.image.licenses=MIT
      - --label=org.opencontainers.image.source=https://github.com/abhimanyu003/sttr
      - --label=org.opencontainers.image.authors=Abhimanyu Sharma <abhimanyusharma003@gmail.com>

  - skip_push: false
    goarch: arm64
    use: buildx
    dockerfile: .goreleaser.Dockerfile
    image_templates:
      - ghcr.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-arm64
      - docker.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-arm64
    build_flag_templates:
      - --platform=linux/arm64
      - --label=org.opencontainers.image.version={{ .Version }}
      - --label=org.opencontainers.image.revision={{ .Commit }}
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.created={{ .Date }}
      - --label=org.opencontainers.image.description=a cross-platform, cli app to perform various operations on string
      - --label=org.opencontainers.image.vendor=abhimanyu003
      - --label=org.opencontainers.image.licenses=MIT
      - --label=org.opencontainers.image.source=https://github.com/abhimanyu003/sttr
      - --label=org.opencontainers.image.authors=Abhimanyu Sharma <abhimanyusharma003@gmail.com>
docker_manifests:
  - name_template: ghcr.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}
    image_templates:
      - ghcr.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-arm64
  - name_template: ghcr.io/abhimanyu003/{{ .ProjectName }}:latest
    image_templates:
      - ghcr.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-arm64
  - name_template: docker.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}
    image_templates:
      - docker.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-amd64
      - docker.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-arm64
  - name_template: docker.io/abhimanyu003/{{ .ProjectName }}:latest
    image_templates:
      - docker.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-amd64
      - docker.io/abhimanyu003/{{ .ProjectName }}:{{ .Version }}-arm64

signs:
  - id: checksums
    cmd: cosign
    stdin: "{{ .Env.COSIGN_PASSWORD }}"
    output: true
    artifacts: checksum
    args:
      - sign-blob
      - --yes
      - --key
      - env://COSIGN_PRIVATE_KEY
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"

docker_signs:
  - cmd: cosign
    artifacts: all
    output: true
    args:
      - sign
      - --yes
      - --key
      - env://COSIGN_PRIVATE_KEY
      - "${artifact}"
